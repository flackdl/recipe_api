version: '2.2'

services:

  caddy:
    image: caddy:2.0.0
    ports:
      - "80:80"
      - "443:443"
      # redirect old app to ssl
      - "8080:8080"
    volumes:
      - caddy:/data
      - $PWD/Caddyfile:/etc/caddy/Caddyfile
      - $PWD/staticfiles/:/app/static/

  recipes:
    build: .
    environment:
      DATABASE_URL: postgres://postgres:${DB_PASSWORD:-postgres}@postgres:5432/postgres
    volumes:
      - $PWD:/app
      - recipes-cache:/tmp/recipes
    expose:
      - 80
    depends_on:
      - caddy
      - postgres
    labels:
      # routinely check for new recipes
      deck-chores.new-recipes.command: python manage.py scrape --urls --recipes --images --ingest
      deck-chores.new-recipes.interval: weekly
      # update all recipes less frequently
      deck-chores.update-recipes.command: python manage.py scrape --urls --recipes --images --ingest --force
      deck-chores.update-recipes.interval: 30 days

  postgres:
    image: postgres:11
    # NOTE: use "expose" in production
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres:/var/lib/postgresql/data

  deck-chores:
    image: funkyfuture/deck-chores:1.0
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      options:
        max-size: 10m

volumes:
  postgres:
  caddy:
  recipes-cache:
